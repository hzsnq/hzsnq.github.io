{"version":3,"sources":["sisterItem.js","boss.js","sister.js","index.js"],"names":["SisterItem","props","handleClick","bind","this","deleteItem","index","console","log","onClick","avname","content","Component","defaultProps","Boss","state","isShow","CSSTransition","in","timeout","classNames","unmountOnExit","toToggle","setState","Sister","inputValue","list","input","value","ul","querySelectorAll","length","slice","splice","axios","post","then","res","JSON","stringify","catch","error","htmlFor","id","className","onChange","inputChange","ref","addList","TransitionGroup","map","item","appear","key","Square","Board","i","squares","renderSquare","React","Game","history","Array","fill","stepNumber","xIsNext","calculateWinner","concat","step","status","current","winner","moves","move","desc","jumpTo","Clock","date","Date","timerID","setInterval","tick","clearInterval","toLocaleTimeString","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.cb633dfa.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass SisterItem extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick() {\r\n        this.props.deleteItem(this.props.index)\r\n    }\r\n    //请注意，返回 false 并不会阻止子组件在 state 更改时重新渲染。\r\n    //当返回 false 时，仍可能导致组件重新渲染。\r\n    //考虑使用内置的 PureComponent 组件，二者不可共存,还没研究明白\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     console.log(nextProps.content, this.props.content)\r\n    //     if (nextProps.content !== this.props.content) {\r\n    //         return true\r\n    //     } else {\r\n    //         console.log('false')\r\n    //         return false\r\n    //     }\r\n    // }\r\n\r\n    //组件第一次存在与dom中，函数是不会被执行\r\n    //如果存在与dom中，函数才会执行\r\n    //即将过时\r\n    // componentWillReceiveProps() {\r\n    //     console.log('child-componentWillReceiveProps')\r\n    // }\r\n\r\n    // componentWillUnmount() {\r\n    //     console.log('child-componentWillUnmount')\r\n    // }\r\n\r\n    render() {\r\n        console.log('child-render')\r\n        return (\r\n            <li onClick={this.handleClick}>\r\n                {this.props.avname}\r\n                为你服务-\r\n                {this.props.content}\r\n            </li>\r\n        );\r\n    }\r\n}\r\n\r\nSisterItem.propTypes = {\r\n    avname: PropTypes.string.isRequired,\r\n    content: PropTypes.string,\r\n    deleteItem: PropTypes.func,\r\n    index: PropTypes.number,\r\n}\r\n\r\nSisterItem.defaultProps = {\r\n    avname: '鑫哥'\r\n}\r\n\r\nexport default SisterItem;","import React, { Component } from 'react';\r\n\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nclass Boss extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isShow: true\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CSSTransition\r\n                    in={this.state.isShow}\r\n                    timeout={2000}\r\n                    classNames='show'\r\n                    unmountOnExit\r\n                >\r\n                    <div>Boss-孙悟空</div>\r\n                </CSSTransition>\r\n                <div><button onClick={() => this.toToggle()}>{this.state.isShow ? '隐藏' : '召唤'}</button></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    toToggle() {\r\n        let isShow = this.state.isShow;\r\n        this.setState({\r\n            isShow: !isShow\r\n        })\r\n    }\r\n}\r\n\r\nexport default Boss;","import React, { Component, Fragment } from 'react'\r\nimport axios from 'axios'\r\nimport SisterItem from './sisterItem';\r\nimport Boss from './boss';\r\n\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\n\r\nclass Sister extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        // 不要在这里调用 this.setState()\r\n        this.state = {\r\n            inputValue: '敲背采耳',\r\n            list: ['基础按摩', '精油推背']\r\n        }\r\n    }\r\n\r\n    inputChange() {\r\n        this.setState({\r\n            inputValue: this.input.value,\r\n        });\r\n    }\r\n\r\n    addList() {\r\n        if (this.state.inputValue != '') {\r\n            this.setState({\r\n                list: [...this.state.list, this.state.inputValue],\r\n                inputValue: ''\r\n            }, () => {\r\n                console.log(this.ul.querySelectorAll('li').length)\r\n            });\r\n        }\r\n    }\r\n\r\n    //切记不可直接操作state，React是禁止直接操作state的\r\n    deleteItem(index) {\r\n        let list = this.state.list.slice();\r\n        list.splice(index, 1);\r\n        this.setState({\r\n            list: list,\r\n        });\r\n    }\r\n    //即将过时\r\n    // componentWillMount() {\r\n    //     console.log('componentWillMount将要挂载到页面的时刻')\r\n    // }\r\n\r\n    componentDidMount() {\r\n        console.log('componentDidMount组件挂载完成')\r\n        axios.post('https://web-api.juejin.im/v3/web/wbbr/bgeda')\r\n            .then((res) => {\r\n                console.log('axios获取数据成功' + JSON.stringify(res))\r\n            })\r\n            .catch((error) => {\r\n                console.log('axios获取数据成功' + error)\r\n            })\r\n    }\r\n\r\n    // shouldComponentUpdate(nextProps, nextState) {\r\n    //     console.log('shouldComponentUpdate');\r\n    //     return true\r\n    // }\r\n\r\n    //即将过时\r\n    // componentWillUpdate() {\r\n    //     console.log('componentWillUpdate')\r\n    // }\r\n\r\n    // componentDidUpdate() {\r\n    //     console.log('componentDidUpdate')\r\n    // }\r\n\r\n    render() {\r\n        // console.log('render组件挂载中')\r\n        return (\r\n            <Fragment>\r\n                {/* 这里不能//写注释 */}\r\n                <div>\r\n                    <label htmlFor=\"toInput\">加入服务：</label>\r\n                    <input\r\n                        id='toInput'\r\n                        className='input'\r\n                        value={this.state.inputValue}\r\n                        onChange={() => this.inputChange()}\r\n                        ref={(input) => { this.input = input }}\r\n                    />\r\n                    <button onClick={() => this.addList()}> 增加服务 </button>\r\n                </div>\r\n                <ul ref={(ul) => { this.ul = ul }}>\r\n                    <TransitionGroup>\r\n                        {\r\n                            this.state.list.map((item, index) => {\r\n                                return (\r\n                                    <CSSTransition\r\n                                        timeout={2000}\r\n                                        classNames='show'\r\n                                        unmountOnExit\r\n                                        appear={true}\r\n                                        key={index + item}\r\n                                    >\r\n                                        <SisterItem\r\n                                            key={index + item}\r\n                                            content={item}\r\n                                            index={index}\r\n                                            deleteItem={this.deleteItem.bind(this)}\r\n                                        />\r\n                                    </CSSTransition>\r\n                                );\r\n                            })\r\n                        }\r\n                    </TransitionGroup>\r\n                </ul>\r\n                <Boss />\r\n            </Fragment >\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sister","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Sister from './sister'\r\n\r\nfunction Square(props) {\r\n    return (\r\n        <button className=\"square\" onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component {\r\n    renderSquare(i) {\r\n        return (\r\n            <Square\r\n                value={this.props.squares[i]}\r\n                onClick={() => this.props.onClick(i)}\r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null)\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true\r\n        };\r\n    }\r\n\r\n    handleClick(i) {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares,\r\n            }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n    }\r\n\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ? 'Go to move #' + move : 'Go to game start';\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={() => this.jumpTo(move)}>{desc}</button>\r\n                </li>\r\n            );\r\n        })\r\n\r\n        let status;\r\n        if (winner) {\r\n            status = 'Winner: ' + winner;\r\n        } else {\r\n            status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n\r\n        return (\r\n            <div className=\"game\">\r\n                <div className=\"game-board\">\r\n                    <Board squares={current.squares} onClick={(i) => this.handleClick(i)} />\r\n                </div>\r\n                <div className=\"game-info\">\r\n                    <div>{status}</div>\r\n                    <ol>{moves}</ol>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// ========================================\r\n// clock\r\nclass Clock extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { date: new Date() };\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.timerID = setInterval(() => this.tick(), 1000);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.timerID);\r\n    }\r\n\r\n    tick() {\r\n        this.setState({\r\n            date: new Date()\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Hello，world!</h1>\r\n                <h2>It is {this.state.date.toLocaleTimeString()}.</h2>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nclass All extends React.Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Game />\r\n                <Clock />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <Sister />,\r\n    document.getElementById('root')\r\n);\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}"],"sourceRoot":""}